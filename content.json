{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"物理层","slug":"物理层","date":"2019-11-05T04:29:11.371Z","updated":"2019-11-05T04:29:11.372Z","comments":true,"path":"2019/11/05/物理层/","link":"","permalink":"http://yoursite.com/2019/11/05/%E7%89%A9%E7%90%86%E5%B1%82/","excerpt":"","text":"数据链路层使用物理层提供的服务在通信信道上发送和接受比特。其功能有以下三点：（1）向网络层提供一个定义良好的服务接口（2）处理传输错误（3）调节数据流，确保慢速的接收方不会被快速的接收方淹没 提供给网络层的服务：（1）无确认的无连接服务（2）有确认的无连接服务（3）有确认的有连接服务 成帧 （1）字节计数法 （2）字节填充的标志字节法： 用标志字节FLAG来代表一帧的开始和结束，并用转义字符ESC来解决透明传输的问题 例题 答案SC ESC C ESC ESC ESC FLAG G ESC FLAG D （3）比特填充的标志比特法： 01111110或十六进制0x7E作为标记字节。若传输的数据中遇到连续五个1，则在其后添加一个0，打断六个以上的连续1字节流 （4）物理层编码违禁法 纠错 用于嘈杂不堪，错误率较高的线路 为了可靠的检测d个错误，需要一个距离为d+1的编码方案 （1）海明码 有m个数据位和r个校验位，能够纠正所有的单个错误 例题 Answer：101001001111 （2） 二进制卷积码 （3）里德所罗门码 （4）低密度奇偶校验码 检错 用于光纤或高质量铜线的错误率较低的线路 为了可靠地检测d个错误，需要一个距离为2d+1的编码方案 （1）奇偶： 只能检测出一半的错误 （2）校验和 Internet校验和：将各个数字求和，溢出数字加到低位，最后取反 例题 Answer：1011 （3）循环冗余算法（CRC） 也称多项式编码，算法描述： （1）设定一个n位的生成多项式G（x），G（x）的最高位和最低位必须是1。 （2）在被传输数据后添加n-1个0，利用模二除法与减法，计算出余数 （3）将余数加到添加了n-1个0的被传输数据上作为最终数据 例题 Answer：111 6.基本数据链路层协议： （1）乌托邦式的单工协议 （2）无错信道上的单工停-等协议 （3）有错信道上的单工停-等协议 （4）1位滑动窗口协议 （5）回退N协议 （6）选择重传协议 7.共享信道分配问题（1）静态信道分配：固定的信道分配方案会导致利用率低，资源浪费的后果（2）动态信道分配五个关键假设： a）流量独立 b) 单信道 c) 冲突可观察 d) 时间连续或分槽 e) 载波侦听或不听 多路访问协议 （1）纯ALOHA 关键量： a)每帧时的平均帧数：G b)每时刻生成k帧的概率：Pr[k]服从参数为G的泊松分布 c)需要k次尝试才能传输成功的概率：Pk = e^(-G)*(1-e^(-G))^(k-1) d)每帧平均传输次数：E= e^G 例题 Answer：a）e^-2 b) (1-e^(-2))^k*e^(-2) c)e^2 （2）分槽ALOHA （3）载波侦听多路访问协议（CSMA） a）坚持和非坚持CSMA b）带冲突检测的CSMA（CSMA/CD） （4）无冲突协议： a）位图协议 b）令牌传递 c）二进制倒计数 （5）有限竞争协议 9.经典以太网 1）帧格式： 传输时间T必须大于2tao，最差情况下，2tao为50us，又因为传输速率为10Mbps，故帧长度至少为500bit，加上安全余量，帧长度被定为512bit，即64字节。 2）二进制指数后退的 CSMA/CA 算法描述：在发生第i个冲突后，等待时间为0~2^i-1中的随机值；i大于10以后，区间最大值被固定在1023；i=16，返回传输失败报告。 优点： 若发生冲突的站数量少，可确保较低的延迟 若发生冲突的站数量多，可保证在一个合理的时间间隔内解决冲突","categories":[],"tags":[]},{"title":"逻辑链路层","slug":"逻辑链路层","date":"2019-11-05T03:52:24.000Z","updated":"2019-11-05T05:07:42.938Z","comments":true,"path":"2019/11/05/逻辑链路层/","link":"","permalink":"http://yoursite.com/2019/11/05/%E9%80%BB%E8%BE%91%E9%93%BE%E8%B7%AF%E5%B1%82/","excerpt":"","text":"h1h2h3h4h5一级标题二级标题 hello1 hello2 hello3 12345public static void main (String args[])&#123; int a,b ; int c = a+b ; System.out.println (c);&#125; github{:target=”_blank”}百度$$ x \\href{why-equal.html}{=} y^2 + 1 $$","categories":[],"tags":[]},{"title":"my first blog","slug":"my-first-blog","date":"2019-11-05T01:43:15.000Z","updated":"2019-11-05T01:47:55.700Z","comments":true,"path":"2019/11/05/my-first-blog/","link":"","permalink":"http://yoursite.com/2019/11/05/my-first-blog/","excerpt":"","text":"第一章内容 第二章内容 参考文献www.Bryant.cn","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-11-05T01:37:51.841Z","updated":"2019-11-05T01:37:51.841Z","comments":true,"path":"2019/11/05/hello-world/","link":"","permalink":"http://yoursite.com/2019/11/05/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}